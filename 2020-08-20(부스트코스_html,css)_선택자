* class 선택자, id 선택자의 차이점

1. class 선택자는 "."기호를 사용, id 선택자는 "#" 기호를 사용
2. 태그의 class 속성이 아닌 id 속성을 참조한다.
3. 문서 내에 유일한 요소에 사용(class 선택자는 여러번 사용 가능, id 선택자는 단 한번만 사용 가능)
4. 구체성의 값이 다르다.(하기 내용에 기입)

* 선택자의 조합

1. 요소와 클래스의 조합 = p.bar{...}
2. 다중 클래스 = .foo.bar {...}
3. 아이디와 클래스의 조합 = #foo.bar {}

* 속성 선택자([])

(예시)
CSS
  p[class] {color:silver;} // [] - 대괄호를 사용하여 해당 선택자를 사용할 경우를 모두 포함함
  p[class][id]{text-decoration: underline;}
HTML
  <p class="foo">Hello</p>
  <p class="bar">CSS</p>
  <p class="baz" id="title">HTML</p>
  
 ********* 다만 위에서 class 선택자의 값을 정확히 지칭한 경우에는 적용이 안되는 것으로 보아 보다 명확하게 지칭을 한 경우가 최종 적용되는 형태로 보인다. **********
 
 * 부분 속성값으로 선택
 
   1. [class~="bar"]: class 속성의 값이 공백으로 구분한  "bar" 단어가 포함되는 요소 선택
   2. [class^="bar"]: class 속성의 값이 "bar"로 시작하는 요소 선택
   3. [class$="bar"]: class 속성의 값이 "bar"로 끝나는 요소 선택
   4. [class*="bar"]: class 속성의 값이 "bar" 문자로 포함되는 요소 선택
 
 * 자손 선택자 = 바로 연결되어 있는 그 아래 태그들을 의미 / div span {..} = div 요소 내의 span 요소를 의미
 * 자식 선택자 = div > span {...} 와 같은 형태 / div 바로 다음으로 나오는 span만을 의미
 * 인접 형제 선택자 = div + span {} / div 요소의 인접한 형제 요소 span을 찾는 것 <div> ~~~ </div> <span> 이 경우 <span>을 의미함
 * 조합하여 사용 = body > div table + ul {} / body 요소의 자식인 div 요소의 자손인 table 요소 바로 뒤에 인접한 ul 요소를 선택
 
 * 가상 선택자
 
   1. 가상 클래스
      미리 정의해놓은 상황에 적용이 되도록 약속되어있는 보이지 않는 클래스 / 예시) :pseudo-class {property:value}, :hover 같은 것을 의미
      1-1. 문서 구조와 관련된 가상 클래스
        * :first-child / 첫번째 자식 요소 선택
        * :last-child / 마지막 자식 요소 선택
        
      1-2. 링크 관련된 가상 클래스
        * :link / 하이퍼링크이면서 아직 방문하지 않은 앵커 (링크를 누르기 전)
        * :visited / 이미 방문한 하이퍼링크를 의미 (링크를 누른 후)
      
      1-3. 사용자 동작 관련 가상 클래스
        * :focus / 현재 입력 포커스를 갖고 있는 요소에 적용
        * :hover / 마우스 포인터가 위치해 있는 요소에 적용
        * :active / 사용자 입력에 의해 활성화된 요소에 적용
        
   2. 가상 요소
      미리 정의해놓은 위치에 삽입이 되도록 약속되어있는 보이지 않는 요소
      * :before / 가장 앞에 요소를 삽입 / 사용 예시) p:before {color: red; content: "before 가상 요소를 활용한 요소"} -> p 이전에 content 내용이 삽입되고 그 내용은 color red가 적용
      * :after / 가장 뒤에 요소를 삽입 / 위 before와 마찬가지로 내용 뒤에 적용
      * :first-line / 요소의 첫번째 줄에 있는 텍스트 / 사용 예시) p:first-line {color:yellow} -> p 요소 내의 내용 중 첫번째 줄에 color yellow 적용
      * :first-letter / 블록 레벨 요소의 첫번째 문자 / 사용 예시) p:first-letter {font-size: 3em;} -> p 요소 내의 내용 중 첫번째 단어에 font-size: 3em을 적용 

* 상속
  box 모델 속성은 상속되지 않는다. ex) padding, margin, background, border 등등
  
* 구체성
  구체성은 0,0,0,0 이라는 4개의 숫자 값으로 구성되어 있다. 값을 비교할 때는 좌측에 있는 값부터 비교하며, 좌측 부분의 숫자가 클수록 높은 구체성을 갖는다.
  
  1. 선택자에 있는 모든 id 속성값 : 0,1,0,0
  2. 선택자에 있는 모든 class 속성값, 기타 속성, 가상 클래스 : 0,0,1,0
  3. 선택자에 있는 모든 요소, 가상 요소 : 0,0,0,1
  4. 전체 선택자는 0,0,0,0을 가진다.
  5. 인라인 스타일 : 1,0,0,0 /* 예시) <p id="page" style="color:blue">블라블라</p> 와 같이 p 라인 요소 안에 인라인 스타일이 있는 경우 그 내용이 제일 우선시 된다. */
  6. !important : 위 모든 구체성을 무시하고 최고 우선권을 갖는다.
  
  구체성의 예시)
  1. h1{..} : 0,0,0,1 /* 모든 요소 1개 */
  2. body h1{..} : 0,0,0,2 /* 모든 요소 2개 */
  3. .grape {..} : 0,0,1,0 /* class 속성값 1개 */
  4. *.bright {..} : 0,0,1,0 /* 전체 선택자, class 속성값 */
  5. p.bright em.dark {} : 0,0,2,2 /* class 속성값 2개, 모든 요소 2개 */
  6. #page {..} : 0,1,0,0 /* id 속성값 1개 */
  7. div#page {..} : 0,1,0,1 /* 모든 요소 1개, id 속성값 1개 */
 
 
 
 
 
 
